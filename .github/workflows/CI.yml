name: Terraform + K3s CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main", "testing" ]

jobs:
  plan:
    name: 🧩 Terraform Plan (PR)
    if: github.event_name == 'pull_request'
    runs-on: [self-hosted, Linux, X64]
    env:
      KUBECONFIG: /home/alan/.kube/config

    steps:
      - uses: actions/checkout@v4

      - name: 🧭 Set K3s context
        run: |
          echo "🧭 Setting Kubernetes context ke K3s lokal..."
          kubectl config use-context default || {
            echo "❌ Context k3s tidak ditemukan di kubeconfig!"
            kubectl config get-contexts
            exit 1
          }
          echo "✅ Context aktif:"
          kubectl config current-context

      - name: ⚙️ Init & Plan
        working-directory: ./dev/excute
        run: |
          tofu init -input=false
          tofu plan -input=false \
            -var-file="../devde/pods.tfvars" \
            -out=tfplan

  apply:
    name: 🚀 Terraform Apply (Merge to main)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: [self-hosted, Linux, X64]
    env:
      KUBECONFIG: /home/alan/.kube/config

    steps:
      - uses: actions/checkout@v4

      - name: 🧭 Set K3s context
        run: |
          echo "🧭 Setting Kubernetes context ke K3s lokal..."
          kubectl config use-context k3s || {
            echo "❌ Context k3s tidak ditemukan di kubeconfig!"
            kubectl config get-contexts
            exit 1
          }
          echo "✅ Context aktif:"
          kubectl config current-context

      - name: ⚙️ Init & Plan Ulang
        working-directory: ./dev/excute
        run: |
          tofu init -input=false
          tofu plan -input=false \
            -var-file="../devde/pods.tfvars" \
            -out=tfplan

      - name: 🚀 Apply
        working-directory: ./dev/excute
        run: |
          tofu apply -auto-approve tfplan || {
            echo "⚠️ Resource sudah ada — lanjutkan deployment..."
          }

      - name: ✅ Verify
        continue-on-error: true
        run: |
          kubectl get ns
          kubectl get pods -A
